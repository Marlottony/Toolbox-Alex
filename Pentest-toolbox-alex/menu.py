import sys
from colorama import Fore, Style

def displayHeader():
    """
    Affiche l'en-tête de l'application.
    """
    displayInfo = f"""{Fore.CYAN}
                                             
 _____        _ _              _____ _         
|_   _|__ ___| | |_ ___ _ _   |  _  | |___ _ _ 
  | || . | . | | . | . |_'_|  |     | | -_|_'_|
  |_||___|___|_|___|___|_,_|  |__|__|_|___|_,_|

 ************************************                                                                 
     """
    print(displayInfo)

def displayMenu():
    """Affiche le menu principal avec les options disponibles."""
    displayInfo = f"""
    {Fore.GREEN}[ 1 ]{Style.RESET_ALL} - Reconnaissance
    {Fore.GREEN}[ 2 ]{Style.RESET_ALL} - Balayage
    {Fore.GREEN}[ 3 ]{Style.RESET_ALL} - Exploitation
    {Fore.GREEN}[ 4 ]{Style.RESET_ALL} - OSINT
    {Fore.GREEN}[ 5 ]{Style.RESET_ALL} - Générer un rapport PDF sur la cible
    {Fore.GREEN}[ 6 ]{Style.RESET_ALL} - Générer une commande de shell inversé

    {Fore.YELLOW}[ 99 ]{Style.RESET_ALL} - Quitter le programme
    """
    print(displayInfo)

def getInput(prompt, return_to_menu=False):
    """Gère l'entrée utilisateur et capture KeyboardInterrupt pour un comportement personnalisé."""
    try:
        return input(prompt)
    except KeyboardInterrupt:
        print("\nCTRL+C détecté. Retour en arrière...")
        if return_to_menu:
            return 'z'
        return None

def ReconMenu():
    """Affiche le menu des options de reconnaissance."""
    displayInfo = f"""
    {Fore.CYAN}[ 1 ] - Reconnaissance{Style.RESET_ALL}

        {Fore.GREEN}[ a ]{Style.RESET_ALL} - Requête Whois de base
        {Fore.GREEN}[ b ]{Style.RESET_ALL} - Rechercher un CVE
        {Fore.GREEN}[ c ]{Style.RESET_ALL} - Obtenir des données DNS sur un domaine
        {Fore.GREEN}[ d ]{Style.RESET_ALL} - Obtenir des informations sur un certificat HTTPS
        {Fore.GREEN}[ e ]{Style.RESET_ALL} - Extrait toutes les identifications CVE d'une URL spécifique

        {Fore.YELLOW}[ z ]{Style.RESET_ALL} - Retour
    """
    print(displayInfo)

def ScanningMenu():
    """Affiche le menu des options de balayage."""
    displayInfo = f"""
    {Fore.CYAN}[ 2 ] - Balayage{Style.RESET_ALL}

        {Fore.GREEN}[ a ]{Style.RESET_ALL} - Scan de ports Nmap
        {Fore.GREEN}[ b ]{Style.RESET_ALL} - Scan Nikto
        {Fore.GREEN}[ c ]{Style.RESET_ALL} - Découverte d'URL avec Dirbuster

        {Fore.YELLOW}[ z ]{Style.RESET_ALL} - Retour
    """
    print(displayInfo)

def ExploitMenu():
    """Affiche le menu des options d'exploitation."""
    displayInfo = f"""
    {Fore.CYAN}[ 3 ] - Exploitation{Style.RESET_ALL}

        {Fore.GREEN}[ a ]{Style.RESET_ALL} - Recherche de vulnérabilités et d'exploits sur un service

        {Fore.YELLOW}[ z ]{Style.RESET_ALL} - Retour
    """
    print(displayInfo)

def OsintMenu():
    """Affiche le menu des options OSINT."""
    displayInfo = f"""
    {Fore.CYAN}[ 4 ] - OSINT{Style.RESET_ALL}

        {Fore.GREEN}[ a ]{Style.RESET_ALL} - Recherche de noms d'utilisateur sur les réseaux sociaux
        {Fore.GREEN}[ b ]{Style.RESET_ALL} - Recherche inversée de numéro de téléphone
        {Fore.GREEN}[ c ]{Style.RESET_ALL} - Générateur d'identité fictive
        {Fore.GREEN}[ d ]{Style.RESET_ALL} - Recherche avec Dorks

        {Fore.YELLOW}[ z ]{Style.RESET_ALL} - Retour
    """
    print(displayInfo)

def main():
    """Fonction principale pour exécuter la boucle de l'application."""
    while True:
        displayHeader()
        displayMenu()
        choice = getInput("Veuillez entrer votre choix : ", return_to_menu=True)
        
        if choice == '1':
            while True:
                ReconMenu()
                recon_choice = getInput("Veuillez entrer votre choix : ")
                if recon_choice in ['z', None]:
                    break
        elif choice == '2':
            while True:
                ScanningMenu()
                scan_choice = getInput("Veuillez entrer votre choix : ")
                if scan_choice in ['z', None]:
                    break
        elif choice == '3':
            while True:
                ExploitMenu()
                exploit_choice = getInput("Veuillez entrer votre choix : ")
                if exploit_choice in ['z', None]:
                    break
        elif choice == '4':
            while True:
                OsintMenu()
                osint_choice = getInput("Veuillez entrer votre choix : ")
                if osint_choice in ['z', None]:
                    break
        elif choice == '5':
            print("Générer un rapport PDF...")
        elif choice == '6':
            print("Générer une commande de shell inversé...")
        elif choice == '99':
            print("Sortie du programme...")
            break
        elif choice is None:
            continue
        else:
            print("Choix invalide, veuillez réessayer.")
        print("\nRetour au menu principal...\n")

if __name__ == "__main__":
    main()